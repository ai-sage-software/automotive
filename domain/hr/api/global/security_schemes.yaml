---
openapi: "3.0.1"
info:
  title: "Domain API Specification"
  description: "API generated from DSL domain ontology."
  version: "1.0.0"
components:
  securitySchemes:

    # ==========================================================
    # 1. OAuth 2.0 (Industry Standard for modern APIs)
    #    Used for client authentication and authorization via tokens.
    # ==========================================================
    OAuth2:
      type: oauth2
      description: |
        OAuth 2.0 flows for obtaining and refreshing access tokens.
        The client must acquire an access token before making API calls.
      flows:
        # Client Credentials Flow (Common for machine-to-machine/backend services)
        clientCredentials:
          tokenUrl: https://auth.yourcompany.com/oauth/token
          scopes:
            # Scope for read access to the HR domain
            hr:read:
              description: Read access to all Human Resources domain resources.
            # Scope for read/write access to the HR domain
            hr:write:
              description: Read/write access to all Human Resources domain resources.
            # Scope for managing specific aggregate root (Personnel Records)
            personnel:manage:
              description: Full management (CRUD) access to Personnel Records.
        # Authorization Code Flow (Common for browser-based apps/user login)
        authorizationCode:
          authorizationUrl: https://auth.yourcompany.com/oauth/authorize
          tokenUrl: https://auth.yourcompany.com/oauth/token
          scopes:
            hr:read:
              description: Read access to all Human Resources domain resources.
            hr:write:
              description: Read/write access to all Human Resources domain resources.

    # ==========================================================
    # 2. API Key (Simple authentication for B2B/simpler integrations)
    #    Used to identify the calling application.
    # ==========================================================
    ApiKeyAuth:
      type: apiKey
      description: |
        Authentication via a static, unique API Key provided in a request header.
      name: X-API-Key
      in: header

    # ==========================================================
    # 3. HTTP Bearer Token (Simpler wrapper for JWT/OAuth tokens)
    #    Used if you primarily rely on a single token in the Authorization header.
    # ==========================================================
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: |
        Authentication using a JSON Web Token (JWT) supplied in the 
        Authorization header as a Bearer token.