/personnel-records:
  get:
    tags: [ "PersonnelRecord" ]
    summary: Retrieve a list of all PersonnelRecord records.
    operationId: listPersonnelRecords
    parameters:
      - in: query
        name: limit
        schema:
          type: integer
          default: 50
        description: Maximum number of records to return.
    responses:
      '200':
        description: A list of PersonnelRecord records.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: 'openapi.yaml#/components/schemas/PersonnelRecord'
        '401':
          $ref: responses.yaml#/components/responses/UnauthorizedError'
        '500':
          $ref: 'responses.yaml#/components/responses/ServerError'
/personnel-records/{recordId}:
  parameters:
    - in: path
  name: recordId
  schema:
    type: string
  required: true
  description: The unique identifier for the specific PersonnelRecord.
  example: PR-1234567
  get:
    tags: [ "PersonnelRecord" ]
    summary: Retrieve a specific PersonnelRecord record.
    operationId: getPersonnelRecordById
    responses:
      '200':
      description: The requested PersonnelRecord record.
      content:
        application/json:
          schema:
            $ref: 'openapi.yaml#/components/schemas/PersonnelRecord'
    '404':
      $ref: 'responses.yaml#/components/responses/NotFoundError'
    '401':
      $ref: 'responses.yaml#/components/responses/UnauthorizedError'
  delete:
    tags: [ "PersonnelRecord" ]
    summary: Delete a PersonnelRecord Record
    description: Marks the PersonnelRecord record as inactive or removes it entirely.
    operationId: deletePersonnelRecordRecord
    responses:
      '204':
        description: Record successfully deleted (or deactivated).
      '401':
        $ref: 'responses.yaml#/components/responses/UnauthorizedError'
      '404':
        $ref: 'responses.yaml#/components/responses/NotFoundError'
  /personnel-records/{recordId}/benefit-plans:
    get:
      tags: [ "BenefitPlan" ]
      summary: Retrieve a list of all BenefitPlan records.
      operationId: listBenefitPlans
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
            default: 50
          description: Maximum number of records to return.
      responses:
        '200':
          description: A list of BenefitPlan records.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: 'openapi.yaml#/components/schemas/BenefitPlan'
          '401':
            $ref: 'responses.yaml#/components/responses/UnauthorizedError'
          '500':
            $ref: 'responses.yaml#/components/responses/ServerError'
  /personnel-records/{recordId}/benefit-plans/{planKey}:
    parameters:
      - in: path
    name: planKey
    schema:
      type: string
    required: true
    description: The unique identifier for the specific BenefitPlan.
    example: PR-1234567
    get:
      tags: [ "BenefitPlan" ]
      summary: Retrieve a specific BenefitPlan record.
      operationId: getBenefitPlanById
      responses:
        '200':
        description: The requested BenefitPlan record.
        content:
          application/json:
            schema:
              $ref: 'openapi.yaml#/components/schemas/BenefitPlan'
      '404':
        $ref: 'responses.yaml#/components/responses/NotFoundError'
      '401':
        $ref: 'responses.yaml#/components/responses/UnauthorizedError'
    delete:
      tags: [ "BenefitPlan" ]
      summary: Delete a BenefitPlan Record
      description: Marks the BenefitPlan record as inactive or removes it entirely.
      operationId: deleteBenefitPlanRecord
      responses:
        '204':
          description: Record successfully deleted (or deactivated).
        '401':
          $ref: 'responses.yaml#/components/responses/UnauthorizedError'
        '404':
          $ref: 'responses.yaml#/components/responses/NotFoundError'
/personnel-records/{recordId}/tax-filing-status:
  get:
    tags: [ "TaxFilingStatus" ]
    summary: Retrieve a list of all TaxFilingStatus records.
    operationId: listTaxFilingStatuss
    parameters:
      - in: query
        name: limit
        schema:
          type: integer
          default: 50
        description: Maximum number of records to return.
    responses:
      '200':
        description: A list of TaxFilingStatus records.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: 'openapi.yaml#/components/schemas/TaxFilingStatus'
        '401':
          $ref: 'responses.yaml#/components/responses/UnauthorizedError'
        '500':
          $ref: 'responses.yaml#/components/responses/ServerError'
/personnel-records/{recordId}/tax-filing-status/{statusId}:
  parameters:
    - in: path
  name: statusId
  schema:
    type: string
  required: true
  description: The unique identifier for the specific TaxFilingStatus.
  example: PR-1234567
  get:
    tags: [ "TaxFilingStatus" ]
    summary: Retrieve a specific TaxFilingStatus record.
    operationId: getTaxFilingStatusById
    responses:
      '200':
      description: The requested TaxFilingStatus record.
      content:
        application/json:
          schema:
            $ref: 'openapi.yaml#/components/schemas/TaxFilingStatus'
    '404':
      $ref: 'responses.yaml#/components/responses/NotFoundError'
    '401':
      $ref: 'responses.yaml#/components/responses/UnauthorizedError'
    delete:
      tags: [ "TaxFilingStatus" ]
      summary: Delete a TaxFilingStatus Record
      description: Marks the TaxFilingStatus record as inactive or removes it entirely.
      operationId: deleteTaxFilingStatusRecord
      responses:
        '204':
          description: Record successfully deleted (or deactivated).
        '401':
          $ref: 'responses.yaml#/components/responses/UnauthorizedError'
        '404':
          $ref: 'responses.yaml#/components/responses/NotFoundError'
/personnel-records/{recordId}/time-off-balances:
  get:
    tags: [ "TimeOffBalance" ]
    summary: Retrieve a list of all TimeOffBalance records.
    operationId: listTimeOffBalances
    parameters:
      - in: query
        name: limit
        schema:
          type: integer
          default: 50
        description: Maximum number of records to return.
    responses:
      '200':
        description: A list of TimeOffBalance records.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: 'openapi.yaml#/components/schemas/TimeOffBalance'
        '401':
          $ref: 'responses.yaml#/components/responses/UnauthorizedError'
        '500':
          $ref: 'responses.yaml#/components/responses/ServerError'
/personnel-records/{recordId}/time-off-balances/{balanceId}:
  parameters:
    - in: path
  name: balanceId
  schema:
    type: string
  required: true
  description: The unique identifier for the specific TimeOffBalance.
  example: PR-1234567
  get:
    tags: [ "TimeOffBalance" ]
    summary: Retrieve a specific TimeOffBalance record.
    operationId: getTimeOffBalanceById
    responses:
      '200':
      description: The requested TimeOffBalance record.
      content:
        application/json:
          schema:
            $ref: 'openapi.yaml#/components/schemas/TimeOffBalance'
    '404':
      $ref: 'responses.yaml#/components/responses/NotFoundError'
    '401':
      $ref: 'responses.yaml#/components/responses/UnauthorizedError'
    delete:
      tags: [ "TimeOffBalance" ]
      summary: Delete a TimeOffBalance Record
      description: Marks the TimeOffBalance record as inactive or removes it entirely.
      operationId: deleteTimeOffBalanceRecord
      responses:
        '204':
          description: Record successfully deleted (or deactivated).
        '401':
          $ref: 'responses.yaml#/components/responses/UnauthorizedError'
        '404':
          $ref: 'responses.yaml#/components/responses/NotFoundError'
/personnel-records/{recordId}/time-off-events:
  get:
    tags: [ "TimeOffEvent" ]
    summary: Retrieve a list of all TimeOffEvent records.
    operationId: listTimeOffEvents
    parameters:
      - in: query
        name: limit
        schema:
          type: integer
          default: 50
        description: Maximum number of records to return.
    responses:
      '200':
        description: A list of TimeOffEvent records.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: 'openapi.yaml#/components/schemas/TimeOffEvent'
        '401':
          $ref: 'responses.yaml#/components/responses/UnauthorizedError'
        '500':
          $ref: 'responses.yaml#/components/responses/ServerError'
/personnel-records/{recordId}/time-off-events/{eventId}:
  parameters:
    - in: path
  name: eventId
  schema:
    type: string
  required: true
  description: The unique identifier for the specific TimeOffEvent.
  example: PR-1234567
  get:
    tags: [ "TimeOffEvent" ]
    summary: Retrieve a specific TimeOffEvent record.
    operationId: getTimeOffEventById
    responses:
      '200':
      description: The requested TimeOffEvent record.
      content:
        application/json:
          schema:
            $ref: 'openapi.yaml#/components/schemas/TimeOffEvent'
    '404':
      $ref: 'responses.yaml#/components/responses/NotFoundError'
    '401':
      $ref: 'responses.yaml#/components/responses/UnauthorizedError'
    delete:
      tags: [ "TimeOffEvent" ]
      summary: Delete a TimeOffEvent Record
      description: Marks the TimeOffEvent record as inactive or removes it entirely.
      operationId: deleteTimeOffEventRecord
      responses:
        '204':
          description: Record successfully deleted (or deactivated).
        '401':
          $ref: 'responses.yaml#/components/responses/UnauthorizedError'
        '404':
          $ref: 'responses.yaml#/components/responses/NotFoundError'
/personnel-records/{recordId}/tax-jurisdiction-filings:
  get:
    tags: [ "TaxJurisdictionFiling" ]
    summary: Retrieve a list of all TaxJurisdictionFiling records.
    operationId: listTaxJurisdictionFilings
    parameters:
      - in: query
        name: limit
        schema:
          type: integer
          default: 50
        description: Maximum number of records to return.
    responses:
      '200':
        description: A list of TaxJurisdictionFiling records.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: 'openapi.yaml#/components/schemas/TaxJurisdictionFiling'
        '401':
          $ref: 'responses.yaml#/components/responses/UnauthorizedError'
        '500':
          $ref: 'responses.yaml#/components/responses/ServerError'
/personnel-records/{recordId}/tax-jurisdiction-filings/{jurisdictionId}:
  parameters:
    - in: path
  name: jurisdictionId
  schema:
    type: string
  required: true
  description: The unique identifier for the specific TaxJurisdictionFiling.
  example: PR-1234567
get:
  tags: [ "TaxJurisdictionFiling" ]
  summary: Retrieve a specific TaxJurisdictionFiling record.
  operationId: getTaxJurisdictionFilingById
  responses:
    '200':
    description: The requested TaxJurisdictionFiling record.
    content:
      application/json:
        schema:
          $ref: 'openapi.yaml#/components/schemas/TaxJurisdictionFiling'
  '404':
    $ref: 'responses.yaml#/components/responses/NotFoundError'
  '401':
    $ref: 'responses.yaml#/components/responses/UnauthorizedError'
  delete:
    tags: [ "TaxJurisdictionFiling" ]
    summary: Delete a TaxJurisdictionFiling Record
    description: Marks the TaxJurisdictionFiling record as inactive or removes it entirely.
    operationId: deleteTaxJurisdictionFilingRecord
    responses:
      '204':
        description: Record successfully deleted (or deactivated).
      '401':
        $ref: 'responses.yaml#/components/responses/UnauthorizedError'
      '404':
        $ref: 'responses.yaml#/components/responses/NotFoundError'